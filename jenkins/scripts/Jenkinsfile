pipeline {
    agent any
    tools {
        maven 'Maven 3.6.1'
        jdk 'JDK8'
    }
    parameters {
      booleanParam(name: 'deployToProd',
        defaultValue: false,
        description: 'Deploy to Production'
        )
      booleanParam(name: 'runIntegration',
        defaultValue: false,
        description: 'Run Integration Test'
        )
      booleanParam(name: 'runSelenium',
        defaultValue: false,
        description: 'Run Selenium Test'
        )
    }
    environment {
      GENERATE_ARTIFACT_FOR_ENV = "PROD"
      MY_APP_VERSION = readMavenPom(file: 'infoserver/pom.xml').getVersion()
      MY_RELEASE_ARTIFACT="/Users/Shared/Jenkins/Home/jobs/${JOB_NAME}/builds/${BUILD_NUMBER}/archive/release.tar.gz"
    }
    stages {
      stage('Build') { 
        steps {
          echo "POM Version is: Infoserver - $MY_APP_VERSION"
          echo "Jenkins job name: ${JOB_NAME} - build number is: ${BUILD_NUMBER}"
          withEnv(["JAVA_HOME=${ tool 'JDK8' }", "PATH+MAVEN=${tool 'Maven 3.6.1'}/bin:${env.JAVA_HOME}/bin:/usr/local/bin"]) {              
            sh "jenkins/scripts/build.sh $GENERATE_ARTIFACT_FOR_ENV $MY_APP_VERSION" 
          }
        }
        post {
           success {
                echo 'Build stage succeeded, now Archiving...'
               }
        } 
      }
      stage('Archive') { 
        steps {
          echo 'Archiving Release artifacts'
          archiveArtifacts artifacts: 'release.tar.gz'
        }
        post {
           success {
                echo 'Archiving completed.'
            }
        }
      }
      stage('Deploy') { 
        when {
            expression { 
                return params.deployToProd ==~ /(?i)(Y|YES|T|TRUE|ON|RUN)/
            }
        }        
        steps {
          echo "Deploying to Production.."          
          echo "Main Release artifact is $MY_RELEASE_ARTIFACT"          
          sh "jenkins/scripts/deploy.sh $MY_RELEASE_ARTIFACT" 
        }
        post {
           success {
                echo 'Deployment succeeded, you can access the new version now - Happy Browsing!'
            }
        } 
      }
      stage('Integration Test') { 
        when {
            expression { 
                return params.runIntegration ==~ /(?i)(Y|YES|T|TRUE|ON|RUN)/
            }
        }        
        steps {
          echo 'Running Integration Test'
          withEnv(["JAVA_HOME=${ tool 'JDK8' }", "PATH+MAVEN=${tool 'Maven 3.6.1'}/bin:${env.JAVA_HOME}/bin:/usr/local/bin"]) {              
             sh "mvn -f infoserver/pom.xml verify -Pintegration -Dit.skip=false"
          }
        }
        post {
           success {
                echo 'Integration test completed.'
            }
        }
      }
      stage('Selenium Test') { 
        when {
            expression { 
                return params.runSelenium ==~ /(?i)(Y|YES|T|TRUE|ON|RUN)/
            }
        }        
        steps {
          echo 'Running Selenium Test'
          withEnv(['JENKINS_NODE_COOKIE=dontkill', "JAVA_HOME=${ tool 'JDK8' }", "PATH+MAVEN=${tool 'Maven 3.6.1'}/bin:${env.JAVA_HOME}/bin:/usr/local/bin"]) {            
            sh 'jenkins/scripts/start-selenium-server.sh MAC'
            sh "mvn -f infoserver/pom.xml verify -Pselenium -Dit.skip=true"
            sh 'jenkins/scripts/stop-selenium-server.sh'
          }
        }
        post {
           success {
                echo 'Selenium test completed.'
            }
        }
      }
    } 
}